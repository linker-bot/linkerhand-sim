import sys,os
# /---------------------------------------------------------------
L7_JOINT_MAP = {
    0: 6,  1: 1, 2: 0, 3: 0,  4: 0,
    5: 2,  6: 2, 7: 2, 
    8: 3,  9: 3,  10: 3, 
    11: 4, 12: 4, 13: 4, 
    14: 5,  15: 5, 16: 5
}
L7_JOINT_ARC = [(-0.52,1.01), (0,1.43), (0,0.44), (0,1.45), (0,1.57), (0,1.41), (0,1.62), (0,0.96), (0,1.41), (0,1.62), (0,0.96), (0,1.41), (0,1.62), (0,0.96), (0,1.41), (0,1.62), (0,0.96)]
# /---------------------------------------------------------------

L10_JOINT_MAP = {
    0: 9,  1: 1,   2: 0,   3: 0,  4: 0,  5: 6,
    6: 2, 7: 2,   8: 2,   9: 3,  10: 3, 11: 3,
    12: 7, 13: 4, 14: 4,  15: 4, 16: 8, 17: 5,
    18: 5, 19: 5
}
L10_JOINT_ARC = [(-0.1396, 0.349), (0, 1.57), (-1.57, 0), (-1.57, 0), (-1.57, 0), (-0.26, 0.26), (0, 1.396), (0, 1.57), (0, 1.57), (0, 1.57), (0, 1.57), (0, 1.57), (-0.26, 0.26), (0, 1.57), (0, 1.57), (0, 1.57), (-0.26, 0.26), (0, 1.57), (0, 1.57), (0, 1.57)]
# /---------------------------------------------------------------
L20_JOINT_MAP = {
    0: 10,  1: 5,   2: 0,   3: 15,  4: 15,  
    5: 6,  6: 1, 7: 16,   8: 16,
    9: 7,  10: 2, 11: 17, 12: 17, 
    13: 8, 14: 3,  15: 18, 16: 18, 
    17: 9, 18: 4, 19: 19, 20:19
}


L20_JOINT_ARC = [(-0.297,0.683), (0.122,1.78), (0,0.87), (0,1.29), (0,1.29), (-0.26,0.26), (0,1.4), (0,1.08), (0,1.15), (-0.26,0.26), (0,1.4), (0,1.08), (0,1.15), (-0.26,0.26), (0,1.4), (0,1.08), (0,1.15), (-0.26,0.26), (0,1.4), (0,1.08), (0,1.15)]

# /---------------------------------------------------------------
# 注意L21的拇指控制为数组后4位
L21_JOINT_MAP = {
    0: 6,  1: 1,   2: 21,   
    3: 7,  4: 2,  5: 22,
    6: 8, 7: 3,   8: 23,
    9: 9,  10: 4, 11: 24,
    12: 10, 13: 5, 
    14: 0,  15: 15, 16: 20
}
L21_JOINT_ARC = [(-0.18, 0.18),(0, 1.57),(0, 1.57),(-0.18, 0.18),(0, 1.57),(0, 1.57),(-0.18, 0.18),(0, 1.57),(0, 1.57),(0, 0.18),(0, 1.57),(0, 1.57),(-0.6, 0.6),(0, 1.6),(0, 1),(0, 1.57),(0, 1.57)]




#---------------------------------------------------------------------------------------------------
# L7 L OK
l7_l_min = [0, 0, 0, 0, 0, 0, -0.52]
l7_l_max = [0.44, 1.43, 1.62, 1.62, 1.62, 1.62, 1.01]
l7_l_derict = [-1, -1, -1, -1, -1, -1, -1]
# L7 R OK (urdf后续会更改！！！)
l7_r_min = [0, -1.43, 0, 0, 0, 0, 0]
l7_r_max = [0.75, 0, 1.62, 1.62, 1.62, 1.62, 1.54]
l7_r_derict = [-1, 0, -1, -1, -1, -1, -1]
#---------------------------------------------------------------------------------------------------
# L10 L OK
l10_l_min = [0, 0, 0, 0, 0, 0, 0, -0.26, -0.26, -0.52]
l10_l_max = [1.45, 1.43, 1.62, 1.62, 1.62, 1.62, 0.26, 0, 0, 1.01]
l10_l_derict = [-1, -1, -1, -1, -1, -1, 0, -1, -1, -1]
# L10 R OK
l10_r_min = [0, 0, 0, 0, 0, 0, -0.26, 0, 0, -0.52]
l10_r_max = [0.75, 1.43, 1.62, 1.62, 1.62, 1.62, 0, 0.13, 0.26, 1.01]
l10_r_derict = [-1, -1, -1, -1, -1, -1, -1, 0, 0, -1]
#---------------------------------------------------------------------------------------------------
# L20 L OK
l20_l_min = [0, 0, 0, 0, 0, -0.297, -0.26, -0.26, -0.26, -0.26, 0.122, 0, 0, 0, 0, 0, 0, 0, 0, 0]
l20_l_max = [0.87, 1.4, 1.4, 1.4, 1.4, 0.683, 0.26, 0.26, 0.26, 0.26, 1.78, 0, 0, 0, 0, 1.29, 1.08, 1.08, 1.08, 1.08]
l20_l_derict = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1]
# L20 R OK
l20_r_min = [0, 0, 0, 0, 0, -0.297, -0.26, -0.26, -0.26, -0.26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
l20_r_max = [0.87, 1.4, 1.4, 1.4, 1.4, 0.683, 0.26, 0.26, 0.26, 0.26, 1.78, 0, 0, 0, 0, 1.29, 1.08, 1.08, 1.08, 1.08]
l20_r_derict = [-1, -1, -1, -1, -1, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1]
#---------------------------------------------------------------------------------------------------
# L21 L OK
l21_l_min = [0, 0, 0, 0, 0, 0, 0, -0.18, -0.18, 0, -0.6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
l21_l_max = [1, 1.57, 1.57, 1.57, 1.57, 1.6, 0.18, 0.18, 0.18, 0.18, 0.6, 0, 0, 0, 0, 1.57, 0, 0, 0, 0, 1.57, 1.57, 1.57, 1.57, 1.57]
l21_l_derict = [-1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1]
# L21 R OK
l21_r_min = [0, 0, 0, 0, 0, 0, -0.18, -0.18, -0.18, -0.18, -0.6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
l21_r_max = [1, 1.57, 1.57, 1.57, 1.57, 1.6, 0.18, 0.18, 0.18, 0.18, 0.6, 0, 0, 0, 0, 1.57, 0, 0, 0, 0, 1.57, 1.57, 1.57, 1.57, 1.57]
l21_r_derict = [-1, -1, -1, -1, -1, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1]
#---------------------------------------------------------------------------------------------------
#---------------------------------------------------------------------------------------------------
# L25 L OK
l25_l_min = [0, 0, 0, 0, 0, 0, -0.26, -0.26, -0.26, -0.26, -0.26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
l25_l_max = [0.9, 1.57, 1.57, 1.57, 1.57, 1.3, 0.26, 0.26, 0.26, 0.26, 0.61, 0, 0, 0, 0, 1.57, 1.57, 1.57, 1.57, 1.57, 1.57, 1.57, 1.57, 1.57, 1.57]
l25_l_derict = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
# L25 R OK
l25_r_min = [0, 0, 0, 0, 0, 0, -0.26, -0.26, -0.26, -0.26, -0.26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
l25_r_max = [0.9, 1.57, 1.57, 1.57, 1.57, 1.3, 0.26, 0.26, 0.26, 0.26, 0.61, 0, 0, 0, 0, 1.57, 1.57, 1.57, 1.57, 1.57, 1.57, 1.57, 1.57, 1.57, 1.57]
l25_r_derict = [-1, -1, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
#---------------------------------------------------------------------------------------------------

def range_to_arc_left(left_range,hand_joint):
    num=0
    if hand_joint == "L7":
        num = 7
        l_min = l7_l_min
        l_max = l7_l_max
        l_derict = l7_l_derict
    elif hand_joint == "L10":
        num = 10
        l_min = l10_l_min
        l_max = l10_l_max
        l_derict = l10_l_derict
    elif hand_joint == "L20":
        num = 20
        l_min = l20_l_min
        l_max = l20_l_max
        l_derict = l20_l_derict
    elif hand_joint == "L21":
        num = 25
        l_min = l21_l_min
        l_max = l21_l_max
        l_derict = l21_l_derict
    hand_arc = [0] * num
    for i in range(num):
        if hand_joint == "L20":
            if 11 <= i <= 14: continue
        if hand_joint == "L21":
            if 11 <= i <= 14: continue
            if 16 <= i <= 19: continue
        val_l = is_within_range(left_range[i], 0, 255)
        if l_derict[i] == -1:
            hand_arc[i] = scale_value(val_l, 0, 255, l_max[i], l_min[i])
        else:
            hand_arc[i] = scale_value(val_l, 0, 255, l_min[i], l_max[i])
    return hand_arc

def range_to_arc_right(right_range,hand_joint):
    num=0
    if hand_joint == "L7":
        num = 7
        r_min = l7_r_min
        r_max = l7_r_max
        r_derict = l7_r_derict
    elif hand_joint == "L10":
        num = 10
        r_min = l10_r_min
        r_max = l10_r_max
        r_derict = l10_r_derict
    elif hand_joint == "L20":
        num = 20
        r_min = l20_r_min
        r_max = l20_r_max
        r_derict = l20_r_derict
    elif hand_joint == "L21":
        num = 25
        r_min = l21_r_min
        r_max = l21_r_max
        r_derict = l21_r_derict
    hand_arc = [0] * num
    for i in range(num):
        if hand_joint == "L20":
            if 11 <= i <= 14: continue
        if hand_joint == "L21":
            if 11 <= i <= 14: continue
            if 16 <= i <= 19: continue
        val_r = is_within_range(right_range[i], 0, 255)
        if r_derict[i] == -1:
            hand_arc[i] = scale_value(val_r, 0, 255, r_max[i], r_min[i])
        else:
            hand_arc[i] = scale_value(val_r, 0, 255, r_min[i], r_max[i])
    return hand_arc


def scale_value(original_value, a_min, a_max, b_min, b_max):
    return (original_value - a_min) * (b_max - b_min) / (a_max - a_min) + b_min


def is_within_range(value, min_value, max_value):
    return min(max_value, max(min_value, value))